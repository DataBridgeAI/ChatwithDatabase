name: Deploy to GKE

on:
  push:
    branches:
      - deployment-div

env:
  PROJECT_ID: chatwithdata-451800
  GKE_CLUSTER: chat-cluster
  GKE_ZONE: us-central1
  FRONTEND_IMAGE: gcr.io/chatwithdata-451800/chatapp-ui
  BACKEND_IMAGE: gcr.io/chatwithdata-451800/chatapp-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true

    - name: Install GKE Auth Plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin
        gcloud components update

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io -q

    - name: Build Frontend Image
      run: |
        docker build -t ${{ env.FRONTEND_IMAGE }}:${{ github.sha }} -t ${{ env.FRONTEND_IMAGE }}:latest ./frontend
        docker push ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
        docker push ${{ env.FRONTEND_IMAGE }}:latest

    - name: Build Backend Image
      working-directory: ./src
      run: |
        docker build -t ${{ env.BACKEND_IMAGE }}:${{ github.sha }} -t ${{ env.BACKEND_IMAGE }}:latest .
        docker push ${{ env.BACKEND_IMAGE }}:${{ github.sha }}
        docker push ${{ env.BACKEND_IMAGE }}:latest

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
          --zone ${{ env.GKE_ZONE }}

    - name: Create Secrets
      run: |
        # Create OpenAI API key secret
        kubectl create secret generic app-secrets \
          --from-literal=openai-api-key=${{ secrets.OPENAI_API_KEY }} \
          --from-literal=slack-webhook-url=${{ secrets.SLACK_WEBHOOK }} \
          --dry-run=client -o yaml | kubectl apply -f -
        
        # Create GCP credentials secret by first writing the JSON to a temporary file
        echo '${{ secrets.GCP_CREDENTIALS }}' > key.json
        kubectl create secret generic gcp-credentials \
          --from-file=key.json=key.json \
          --dry-run=client -o yaml | kubectl apply -f -
        rm key.json

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s/
        kubectl set image deployment/frontend frontend=${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
        kubectl set image deployment/backend backend=${{ env.BACKEND_IMAGE }}:${{ github.sha }}
    
    - name: Send success notification
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: "✅ Deployment completed successfully!"
        SLACK_COLOR: "good"
        SLACK_TITLE: "Deployment Status"

    - name: Send failure notification
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: "❌ Deployment failed! Check the logs for details."
        SLACK_COLOR: "danger"
        SLACK_TITLE: "Deployment Status"








