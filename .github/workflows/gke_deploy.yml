name: GKE Deployment

on:
  push:
    branches: [ kube2 ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: chatwithdata-451800
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Configure Docker to use Google Cloud
        run: gcloud auth configure-docker

      - name: Debug file structure
        run: |
          echo "Project root directory contents:"
          ls -la
          echo "src directory contents:"
          ls -la src/

      - name: Build Backend Docker image
        run: |
          cd src
          echo "Building from directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          # Use -f to specify the exact filename with its capitalization
          docker build -t gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }} -f Dockerfile .
          docker tag gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }} gcr.io/chatwithdata-451800/chatwithdatabase-backend:latest

      
      
      - name: Build Frontend Docker image
        run: |
          cd frontend
          echo "Building from directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          docker build -t gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }} -f Dockerfile .
          docker tag gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }} gcr.io/chatwithdata-451800/chatwithdatabase-frontend:latest

      - name: Push images to Google Container Registry
        run: |
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }}
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-backend:latest
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }}
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-frontend:latest

      - name: Set up Kubernetes configuration
        run: |
          gcloud container clusters get-credentials chatwithdatabase-cluster --zone us-central1-a

      - name: Deploy to Kubernetes
        run: |
          # Debug - List the kubernetes directory contents
          echo "Kubernetes directory contents:"
          ls -la kubernetes/
          
          # Update the image tags in the deployment files
          sed -i 's|gcr.io/chatwithdata-451800/chatwithdatabase-backend:latest|gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }}|' kubernetes/backend-deployment.yaml
          sed -i 's|gcr.io/chatwithdata-451800/chatwithdatabase-frontend:latest|gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }}|' kubernetes/frontend-deployment.yaml
          
          # Apply Kubernetes configurations
          kubectl apply -f kubernetes/backend-deployment.yaml
          kubectl apply -f kubernetes/frontend-deployment.yaml
          
          # Wait for deployments to be ready
          kubectl rollout status deployment/llm-app-backend
          kubectl rollout status deployment/llm-app-frontend

      - name: Get Service URL
        run: |
          echo "Waiting for external IP..."
          for i in {1..10}; do
            EXTERNAL_IP=$(kubectl get service frontend-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -n "$EXTERNAL_IP" ]; then
              echo "Application is available at: http://$EXTERNAL_IP"
              break
            fi
            echo "Waiting for external IP to be assigned... ($i/10)"
            sleep 30
          done
          
          if [ -z "$EXTERNAL_IP" ]; then
            echo "External IP not yet assigned. Check service status manually."
            kubectl get services
          fi