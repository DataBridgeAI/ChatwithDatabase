name: GKE Deployment

on:
  push:
    branches: [ kube2 ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4    # Updated from v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3    # Updated from v1

      - name: Cache Docker layers
        uses: actions/cache@v3    # Updated from v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2    # Updated version
        with:
          project_id: chatwithdata-451800
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Configure Docker to use Google Cloud
        run: gcloud auth configure-docker

      - name: Build Backend Docker image
        uses: docker/build-push-action@v5    # Updated from v2
        with:
          context: ./src
          file: ./src/Dockerfile
          push: false
          load: true  # Add this line to load the image into Docker's local image store
          tags: gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          provenance: false    # Added for newer versions

      - name: Build Frontend Docker image
        uses: docker/build-push-action@v5    # Updated from v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          load: true  # Add this line to load the image into Docker's local image store
          tags: gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          provenance: false    # Added for newer versions

      # Move cache to prevent growing cache size
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Tag and Push images to Google Container Registry
        run: |
          docker tag gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }} gcr.io/chatwithdata-451800/chatwithdatabase-backend:latest
          docker tag gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }} gcr.io/chatwithdata-451800/chatwithdatabase-frontend:latest
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }}
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-backend:latest
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }}
          docker push gcr.io/chatwithdata-451800/chatwithdatabase-frontend:latest

      - name: Set up Kubernetes configuration
        run: |
          # Install the GKE auth plugin
          echo "Installing GKE authentication plugin..."
          sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          
          # Get credentials
          gcloud container clusters get-credentials chatwithdatabase-cluster --zone us-central1-a

      - name: Deploy to Kubernetes
        run: |
          # Debug - List the kubernetes directory contents
          echo "Kubernetes directory contents:"
          ls -la kubernetes/
          
          # Update the image tags in the deployment files
          sed -i 's|gcr.io/chatwithdata-451800/chatwithdatabase-backend:latest|gcr.io/chatwithdata-451800/chatwithdatabase-backend:${{ github.sha }}|' kubernetes/backend-deployment.yaml
          sed -i 's|gcr.io/chatwithdata-451800/chatwithdatabase-frontend:latest|gcr.io/chatwithdata-451800/chatwithdatabase-frontend:${{ github.sha }}|' kubernetes/frontend-deployment.yaml
          
          # Apply Kubernetes configurations
          kubectl apply -f kubernetes/backend-deployment.yaml
          kubectl apply -f kubernetes/frontend-deployment.yaml
          
          # Wait for deployments to be ready
          kubectl rollout status deployment/llm-app-backend
          kubectl rollout status deployment/llm-app-frontend

      - name: Get Service URL
        run: |
          echo "Waiting for external IP..."
          for i in {1..10}; do
            EXTERNAL_IP=$(kubectl get service frontend-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -n "$EXTERNAL_IP" ]; then
              echo "Application is available at: http://$EXTERNAL_IP"
              break
            fi
            echo "Waiting for external IP to be assigned... ($i/10)"
            sleep 30
          done
          
          if [ -z "$EXTERNAL_IP" ]; then
            echo "External IP not yet assigned. Check service status manually."
            kubectl get services
          fi
